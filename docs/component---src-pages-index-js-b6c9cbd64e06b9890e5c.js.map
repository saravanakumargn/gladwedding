{"version":3,"sources":["webpack:///./node_modules/@emotion/styled/dist/styled.browser.esm.js","webpack:///./node_modules/@material-ui/core/esm/Link/Link.js","webpack:///./src/components/ProTip.js","webpack:///./src/pages/index.js"],"names":["newStyled","bind","forEach","tagName","forwardRef","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","useState","focusVisible","setFocusVisible","handlerRef","useForkRef","createElement","Typography","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","makeStyles","theme","spacing","lightBulb","marginRight","query","IndexPage","data","pageContext","isTamil","useIntl","locale","Layout","isFullWidth","isDontShowBack","title","fluid","banner","childImageSharp","Container","fixed","allStrapiCategories","nodes","map","categoryItems","key","id","labelTa","label","childs","categoryChildItems","to","slug","categoryName","imageData","allCategoryImages","edges","filter","item","node","length","alt","gutterBottom"],"mappings":"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","file":"component---src-pages-index-js-b6c9cbd64e06b9890e5c.js","sourcesContent":["import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.bind\";\nimport styled from '@emotion/styled-base';\nvar tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\nvar newStyled = styled.bind();\ntags.forEach(function (tagName) {\n  newStyled[tagName] = newStyled(tagName);\n});\nexport default newStyled;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, {\n      button: classes.button\n    }[component]),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction LightBulbIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\" />\n    </SvgIcon>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(6, 0, 3),\n  },\n  lightBulb: {\n    verticalAlign: \"middle\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function ProTip() {\n  const classes = useStyles();\n  return (\n    <Typography className={classes.root} color=\"textSecondary\">\n      <LightBulbIcon className={classes.lightBulb} />\n      Pro tip: See more{\" \"}\n      <Link href=\"https://material-ui.com/getting-started/templates/\">\n        templates\n      </Link>{\" \"}\n      on the Material-UI documentation.\n    </Typography>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, Box } from \"@material-ui/core\";\nimport MuiLink from \"@material-ui/core/Link\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport SEO from \"../components/seo\";\nimport ProTip from \"../components/ProTip\";\nimport Layout from \"../components/Layout\";\n// import Language from \"../components/language\"\nimport { useIntl, Link, FormattedMessage } from \"gatsby-plugin-intl\";\nimport Img from \"gatsby-image\";\n\n// const UserWrapper = styled.div`\n// display: flex;\n// align-items: center;\n// justify-content: center;\n// `\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <MuiLink color=\"inherit\" href=\"https://material-ui.com/\">\n//         Your Website\n//       </MuiLink>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   )\n// }\n\nconst IndexPage = ({ data, pageContext }) => {\n  const intl = useIntl();\n  // console.log('data');\n  // console.log(data);\n  const isTamil = pageContext.locale === \"ta\"; // || \"en\"; // location.pathname.includes(\"/ta/\")\n  function getCategoryImage(categoryName) {\n    // console.log(\"categoryName\")\n    // console.log(categoryName)\n    const imageData = data.allCategoryImages.edges.filter(\n      item => item.node.name === categoryName\n    );\n    // console.log(imageData)\n    if (imageData.length <= 0) {\n      return false;\n    }\n\n    return (\n      <Img\n        fixed={imageData[0].node.childImageSharp.fixed}\n        alt=\"A corgi smiling happily\"\n      />\n    );\n  }\n\n  return (\n    <Layout isFullWidth isDontShowBack>\n      <SEO title=\"Wedding vendors near by your location - GladWedding.com\" />\n      <Img fluid={data.banner.childImageSharp.fluid} />\n      <Container fixed>\n        {/* <Language /> */}\n\n        {data.allStrapiCategories.nodes.map(categoryItems => (\n          <div key={categoryItems.id}>\n            <Typography\n              variant=\"h5\"\n              css={css`\n                margin-top: 1rem;\n                margin-bottom: 2rem;\n              `}\n            >\n              {!isTamil ? categoryItems.label : categoryItems.labelTa}\n            </Typography>\n            <div\n              css={css`\n                display: flex;\n                overflow-x: auto;\n                // flex-wrap: wrap;\n              `}\n              // className=\"columns is-multiline\"\n            >\n              {categoryItems.childs.map(categoryChildItems => (\n                <div\n                  key={categoryChildItems.id}\n                  css={css`\n                    display: flex;\n                    align-content: center;\n                    justify-content: center;\n                    margin: 10px;\n                  `}\n                  // className=\"column is-full-mobile is-two-thirds-tablet is-half-desktop is-one-third-widescreen is-one-quarter-fullhd\"\n                >\n                  <Link\n                    to={`/${categoryItems.slug}/${categoryChildItems.slug}`}\n                    color=\"secondary\"\n                    css={css`\n                      text-decoration: none;\n                    `}\n                  >\n                    <>\n                      <div>{getCategoryImage(categoryChildItems.slug)}</div>\n                      <Typography\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        color=\"primary\"\n                        css={css`\n                          text-align: center;\n                        `}\n                      >\n                        {!isTamil\n                          ? categoryChildItems.label\n                          : categoryChildItems.labelTa}\n                      </Typography>\n                    </>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        {/* <Box my={4}>\n\n          {data.allStrapiCategories.nodes.map(categoryItems => (\n            <div key={categoryItems.id}>\n              <Typography\n                variant=\"h5\"\n                css={css`\n                  margin-top: 1rem;\n                  margin-bottom: 2rem;\n                `}\n              >\n                {!isTamil ? categoryItems.label : categoryItems.labelTa}\n              </Typography>\n              <Grid container spacing={3}>\n                {categoryItems.childs.map(categoryChildItems => (\n                  <Grid\n                    item\n                    xs={6}\n                    sm={3}\n                    container\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    key={categoryChildItems.slug}\n                  >\n                    <Link\n                      to={`/${categoryItems.slug}/${categoryChildItems.slug}`}\n                      color=\"secondary\"\n                      css={css`\n                        text-decoration: none;\n                      `}\n                    >\n                      <>\n                        {/* <Button color=\"primary\" component={Link} to={`/${categoryItems.slug}/${categoryChildItems.slug}`}>\n                    {!isTamil ? categoryChildItems.label : categoryChildItems.labelTa}\n                  </Button> *\n                        <div>{getCategoryImage(categoryChildItems.slug)}</div>\n                        <div>\n                          <Typography\n                            variant=\"subtitle1\"\n                            gutterBottom\n                            color=\"primary\"\n                            css={css`\n                              text-align: center;\n                            `}\n                          >\n                            {!isTamil\n                              ? categoryChildItems.label\n                              : categoryChildItems.labelTa}\n                          </Typography>\n                          {/* <Button color=\"primary\" size=\"small\">\n                    {!isTamil ? categoryChildItems.label : categoryChildItems.labelTa}\n                  </Button> *\n                        </div>\n                      </>\n                    </Link>\n                  </Grid>\n                ))}\n              </Grid>\n            </div>\n          ))}\n          <ProTip />\n          <Copyright />\n        </Box> */}\n      </Container>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allStrapiCategories(filter: { level: { eq: 1 } }) {\n      nodes {\n        id\n        level\n        labelTa\n        label\n        slug: name\n        childs {\n          id\n          labelTa\n          label\n          slug: name\n        }\n      }\n    }\n    allCategoryImages: allFile(\n      filter: { relativeDirectory: { eq: \"categories\" } }\n    ) {\n      edges {\n        node {\n          id\n          name\n          childImageSharp {\n            fixed(height: 200, width: 250, quality: 100) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n      }\n    }\n    banner: file(relativePath: { eq: \"header/header.jpg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(maxWidth: 2000, quality: 100) {\n          ...GatsbyImageSharpFluid\n          srcSetWebp\n          srcWebp\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}