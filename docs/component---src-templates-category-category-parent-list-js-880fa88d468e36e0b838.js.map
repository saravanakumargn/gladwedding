{"version":3,"sources":["webpack:///./src/templates/category/category-parent-list.js"],"names":["data","location","pageContext","isTamil","pathname","includes","breadCrumbitems","href","label","categoryParentItem","labelTa","backMobileLink","childs","map","categoryChildItems","key","id","to","slug","color","categoryName","imageData","allCategoryImages","edges","filter","item","node","name","length","fixed","childImageSharp","alt","variant","gutterBottom","query"],"mappings":"m3BAUe,sBAAsC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAK1BC,EAAUF,EAASG,SAASC,SAAS,QAoB3C,IAAMC,EAAkB,CACtB,CAAEC,KAAM,IAAKC,MAAO,QACpB,CACED,KAAM,GACNC,MAAQL,EAEJD,EAAYO,mBAAmBC,QAD/BR,EAAYO,mBAAmBD,QAIvC,OACE,YAAC,IAAD,CAAQG,eAAgB,KACtB,YAAC,IAAD,CAAaL,gBAAiBA,IAS9B,4CACA,mBAQGJ,EAAYO,mBAAmBG,OAAOC,KAAI,SAAAC,GAAkB,OAC3D,eACEC,IAAKD,EAAmBE,IASxB,eACEC,GAAE,IAAMf,EAAYO,mBAAmBS,KAArC,IAA6CJ,EAAmBI,KAClEC,MAAM,aAKN,8BACE,wBAnEYC,EAmEWN,EAAmBI,QAhEhDG,EAAYrB,EAAKsB,kBAAkBC,MAAMC,QAC7C,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,OAASP,MAGfQ,QAAU,IAKtB,YAAC,IAAD,CACEC,MAAOR,EAAU,GAAGK,KAAKI,gBAAgBD,MACzCE,IAAI,8BAsDI,eACEC,QAAQ,YACRC,cAAY,EACZd,MAAM,WAKJhB,EAEEW,EAAmBJ,QADnBI,EAAmBN,UA7EvC,IAA0BY,EAGlBC,QAsFH,IAAMa,EAAK","file":"component---src-templates-category-category-parent-list-js-880fa88d468e36e0b838.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n// import Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useIntl, Link, FormattedMessage } from \"gatsby-plugin-intl\";\nimport Img from \"gatsby-image\";\nimport { css } from \"@emotion/core\";\nimport Layout from \"../../components/Layout\";\nimport Breadcrumbs from \"../../components/Breadcrumbs.js\";\n\nexport default ({ data, location, pageContext }) => {\n  // const intl = useIntl()\n  // const isTamil = intl.language || \"en\"\n  // console.log(pageContext);\n  // console.log(data);\n  const isTamil = location.pathname.includes(\"/ta/\");\n  function getCategoryImage(categoryName) {\n    // console.log(\"categoryName\")\n    // console.log(categoryName)\n    const imageData = data.allCategoryImages.edges.filter(\n      item => item.node.name === categoryName\n    );\n    // console.log(imageData)\n    if (imageData.length <= 0) {\n      return false;\n    }\n\n    return (\n      <Img\n        fixed={imageData[0].node.childImageSharp.fixed}\n        alt=\"A corgi smiling happily\"\n      />\n    );\n  }\n\n  const breadCrumbitems = [\n    { href: \"/\", label: \"Home\" },\n    {\n      href: \"\",\n      label: !isTamil\n        ? pageContext.categoryParentItem.label\n        : pageContext.categoryParentItem.labelTa,\n    },\n  ];\n  return (\n    <Layout backMobileLink={\"/\"}>\n      <Breadcrumbs breadCrumbitems={breadCrumbitems} />\n      {/* <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link color=\"inherit\" to=\"/\">\n          Home\n        </Link>\n        <Typography color=\"textPrimary\">\n          {pageContext.categoryParentItem.label}\n        </Typography>\n      </Breadcrumbs> */}\n      <div>Hello blog posttt</div>\n      <div\n        css={css`\n          display: flex;\n          overflow-x: auto;\n          // flex-wrap: wrap;\n        `}\n        // className=\"columns is-multiline\"\n      >\n        {pageContext.categoryParentItem.childs.map(categoryChildItems => (\n          <div\n            key={categoryChildItems.id}\n            css={css`\n              display: flex;\n              align-content: center;\n              justify-content: center;\n              margin: 10px;\n            `}\n            // className=\"column is-full-mobile is-two-thirds-tablet is-half-desktop is-one-third-widescreen is-one-quarter-fullhd\"\n          >\n            <Link\n              to={`/${pageContext.categoryParentItem.slug}/${categoryChildItems.slug}`}\n              color=\"secondary\"\n              css={css`\n                text-decoration: none;\n              `}\n            >\n              <>\n                <div>{getCategoryImage(categoryChildItems.slug)}</div>\n                <Typography\n                  variant=\"subtitle1\"\n                  gutterBottom\n                  color=\"primary\"\n                  css={css`\n                    text-align: center;\n                  `}\n                >\n                  {!isTamil\n                    ? categoryChildItems.label\n                    : categoryChildItems.labelTa}\n                </Typography>\n              </>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allCategoryImages: allFile(\n      filter: { relativeDirectory: { eq: \"categories\" } }\n    ) {\n      edges {\n        node {\n          id\n          name\n          childImageSharp {\n            fixed(width: 200, height: 200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n    banner: file(relativePath: { eq: \"header/header1.jpeg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(maxWidth: 2000, quality: 100) {\n          ...GatsbyImageSharpFluid\n          srcSetWebp\n          srcWebp\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}